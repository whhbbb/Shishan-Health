{"version":3,"file":"http.js","sources":["../../../../src/utils/http.ts"],"sourcesContent":["import { useMemberStore } from '@/stores'\n\nconst httpInterceptor = {\n  // 拦截前触发\n  invoke(options: UniApp.RequestOptions) {\n    // 非http开头拼接\n    if (!options.url.startsWith('http')) {\n      options.url = 'https://www.academictime.cn:3266' + options.url\n    }\n    options.timeout = 10000\n    // 添加小程序请求头标识\n    options.header = {\n      ...options.header,\n      // 'source-client': 'miniapp'\n    }\n    // 添加token请求头标识\n    const token = uni.getStorageSync('token')\n    if (token) {\n      options.header.Authorization = `Bearer ${token}`\n    }\n  },\n}\n\n// 拦截request请求\nuni.addInterceptor('request', httpInterceptor)\n// 拦截uploadFile请求\nuni.addInterceptor('uploadFile', httpInterceptor)\n\n//白名单 不需要验证token\nconst whiteList = [\n  '/pages/index/index',\n  '/pages/login/login',\n  '/pages/column/column',\n  '/pages/column/components/article',\n  '/pages/recommend/recommend',\n  '/pages/recommend/recommendDetail',\n  '/pages/activity/ActivityDetails',\n  '/pages/my/components/contactUs',\n  '/pages/my/components/aboutUs',\n  '/pages/gift/giftCenter',\n]\n//登录页\nconst loginPage = '/pages/login/login'\nconst initPermission = {\n  invoke(e) {\n    // 调用前拦截\n    console.log('拦截', e)\n    //获取用户的token\n    const token = uni.getStorageSync('token'),\n      //获取要跳转的页面路径（url去掉\"?\"和\"?\"后的参数）\n      url = e.url.split('?')[0]\n    const notNeed = whiteList.includes(url)\n    // 如果在whiteList里面就不需要登录\n    if (notNeed) {\n      return e\n    } else {\n      //需要登录\n      if (!token) {\n        uni.showToast({\n          title: '请先登录',\n          icon: 'none',\n          duration: 1000,\n          complete: () => {\n            setTimeout(() => {\n              uni.navigateTo({\n                url: loginPage,\n              })\n            }, 1000)\n          },\n        })\n\n        return false\n      } else {\n        return e\n      }\n    }\n  },\n  fail(err) {\n    // 失败回调拦截\n    console.log(err)\n  },\n}\n//页面跳转拦截器\nuni.addInterceptor('navigateTo', initPermission)\nuni.addInterceptor('switchTab', initPermission)\nuni.addInterceptor('reLaunch', initPermission)\nuni.addInterceptor('redirectTo', initPermission)\n\ntype Data<T> = {\n  code: string\n  msg: string\n  result: T\n}\n\nexport const http = <T>(options: UniApp.RequestOptions) => {\n  return new Promise<T>((resolve, reject) => {\n    uni.request({\n      ...options,\n      success(res) {\n        //登陆过期\n        console.log(res)\n        if (res.statusCode == 200 && res.data.code == 410) {\n          uni.showToast({\n            title: '登录过期',\n            icon: 'none',\n            duration: 1000,\n            complete: () => {\n              setTimeout(() => {\n                uni.removeStorageSync('token')\n                uni.navigateTo({\n                  url: '/pages/login/login',\n                })\n              }, 1000)\n            },\n          })\n          reject(res)\n        }\n\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          resolve(res.data as T)\n        } else if (res.statusCode === 401) {\n          uni.navigateTo({\n            url: '/pages/login/login',\n          })\n          reject(res)\n        } else {\n          uni.showToast({\n            icon: 'none',\n            title: (res.data as Data<T>).msg || '请求失败',\n          })\n          reject(res)\n        }\n      },\n      fail(err) {\n        uni.showToast({\n          icon: 'none',\n          title: err.errMsg || '网络错误，请换个网络试试',\n        })\n        reject(err)\n      },\n    })\n  })\n}\n"],"names":["uni"],"mappings":"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"}